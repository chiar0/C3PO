package core.uberposition;

import java.util.Random;

public class Zobrist {
   static long[][][] pieces = new long[][][]{{{5313529048600329183L, 2435704785085588877L, -1526217303788477985L, -6889420707900781013L, 5269057170416320042L, -6993428387983164362L, 3867244023092081133L, 5575362939710598526L}, {-2357195049237209769L, 9071475865961540997L, 4075829806031450898L, -6357961790241040317L, 5154056446156762082L, 1597107543828900704L, -1164819717785636211L, -2215425587099381418L}, {2646925032097519613L, -3481550910473694135L, 882591500645822377L, 8383676185257042245L, 5490899004315042624L, -7934734864911975258L, 4472618653082766812L, 4638716585962220689L}, {8451273980989143129L, 430544579992226764L, 6250339874095576276L, -3074578751405767691L, 5341691860872394650L, -8855137196151862620L, 8708473684597066070L, 1584108829917247665L}, {1076864198223787800L, 2057997678343586023L, 1612501243518862652L, -6117920992789490009L, 3353514441941330258L, 2393245901034587250L, -3768789635479148036L, 7438811474782206449L}, {-1907563153467268544L, -7910075412179906822L, 6873116493815233204L, 1472165904906293940L, -3823032218183149621L, 8384096538595797501L, 6307061779247566020L, -8978257196770429141L}, {3304396575765225023L, 321698740368779438L, -3258707412048242143L, -4910403102761353814L, -429274894197424101L, 6117093001649491379L, 3666748114702121162L, 6066500889802203290L}, {-2426208556979735185L, -4663132411601544294L, -9022660463361265819L, 8366769316624963764L, 8590482826531384799L, -6673954531762380074L, -7845136262337250426L, -3026856077142706758L}}, {{2022072903315268187L, -1608279877698369148L, 4267031508963815592L, -5548084331816083515L, 3847383022262120699L, 510870945577969572L, -8008417728592770212L, -5977254418287838485L}, {-1300960012648798691L, -5342853213208527452L, -2758066456101403721L, 3250171870529059312L, -1000796224069994628L, 21620254408403571L, 6988617909042864526L, -4618360911802195626L}, {-8187073220017398748L, 5607123207923679652L, -8147388783709599688L, 273136538755699096L, -3401978744770243041L, 8014686451671663255L, 8518137617708443537L, -8598594675644977745L}, {5573309463413986389L, -5318318277962533257L, 7423716818064804154L, 1768241274140957909L, -1293211069450852769L, -5999092234845023546L, 3418639182986935518L, 2240926892702805427L}, {-6026834297486289026L, 1793462141209292024L, -5284071957325333252L, -6378779784003608431L, 7424465881877726472L, 8831031057602675766L, 4007457555663474213L, -128787610074968910L}, {2976311835761863207L, -6697647238071463219L, -685065854644643397L, 7501718622707734594L, -2198000192840149444L, -7770465161840945343L, 6794120510373169357L, 4197646967016403307L}, {-5375039499670691945L, -7678115688612485828L, -2201738998635760504L, -1638344403651772041L, 2257477701717600515L, -3775913624124001476L, -4681847013092273076L, -7479522669521761696L}, {6448140189378612566L, 7216317200054505690L, 7629117328002130151L, 279436703970059996L, -4120665896983346655L, -686198774473821919L, -7608088954962889213L, 7193105895669755310L}}, {{6874675622267560989L, 8219267204726409055L, -4896627743815678506L, -6873461696237079347L, 6396945258988003586L, 6855855879550610588L, -6169802179936994282L, -4451881627831184299L}, {8449283854379145611L, -9010017244242998967L, 5544900524026408041L, -743796286524100215L, 4012729565389026356L, 1173287963365884242L, -3540205017537196213L, 6050982949582877076L}, {-8667628082107943161L, -9134838051461304833L, 1532752218600374132L, 2493568658165260627L, 6749212357643949173L, -2816666684165104546L, 4342586728484580477L, -7402664598471158183L}, {-2085472355743332013L, -7114340325464343023L, 4913326493782152665L, 1182628313889502198L, -884201621664803483L, 6901684087702427485L, -3900182695386712398L, -4787184344108042480L}, {5894357084586732973L, 2883668495921443006L, 8985340841310646411L, 4803574454566902740L, -5472630550026530708L, -6717092261992429887L, 7917189371223799526L, -2550539680294762328L}, {-1678304823520788704L, -2081177326715263295L, -3592181173115158048L, 5542977997469665631L, -3922922729681450711L, 1290010752211061623L, -5204029732132415865L, -6881737356721832730L}, {3921541795781712845L, -2249869609849923284L, -5820267377224539802L, 4467775216082705941L, -4866522706914019432L, -8154276531715350682L, -6409366283551895136L, -399111696778231383L}, {6214064262059903287L, -7068011273677000910L, 4496846807549349939L, 6219074649357947462L, -8083394694485219663L, -2300488772135086956L, -3214736043318042018L, 5980652915967042424L}}, {{-1813925603975918488L, -5294211723703709490L, -2438868000334997976L, -6417840786169635081L, -3368956969377754020L, -1636505796259790665L, 4354445202151465412L, 3869837996344972599L}, {1102230588593872788L, -5795654474543525946L, -4233073433425022362L, 1169704302339013921L, -543492366397837132L, 7665702992021319990L, -8684604718342986278L, 2612365316529861915L}, {8752477974446684664L, -423957495357039607L, -7332763117974785219L, -6507333680497907353L, -8656459396639877239L, -2135720890291608432L, -987254239121666811L, -7981173251538967207L}, {7236660751597241443L, -402427162227838168L, -5243953403850457346L, 5962984858026150584L, -56158361098557789L, 5379610637323976107L, 7637622232947360515L, -2280980629141901571L}, {953645006260342851L, 5719385210089358883L, -888173212978784861L, -817284806325008817L, 6748959423790699955L, 247265226586610438L, 6961227979593677267L, -7915149522444468617L}, {-4260627424449363366L, 3013003264909500543L, 393933524660608683L, -4918956058788623049L, 7866009602056108359L, 5341605470370795759L, 1813354944610375474L, 5324345568847877075L}, {2598259298851553646L, 9142825561960915572L, 5486509646135498945L, -7493217498551023728L, -6880638474858717924L, -7052181438862121215L, -7636365432085476219L, -5834873816108794584L}, {4301518101995299375L, -4321219192017747352L, -4157632914448412195L, -198540616465127491L, 3546640072189343329L, 6258275050687892331L, -8697517180433274940L, -8331082874950009990L}}, {{-3790311240005100057L, 174464410647471894L, 6327066809017528725L, 1663820287439586923L, 3665792829785047128L, 6564911217983336192L, 7485697735112842240L, -2338203284932482446L}, {8510088074302670206L, 2034021317676137691L, -4906116632510453454L, -5559372287636078706L, 6583747611969190634L, 6369515704654318999L, -7128272706690519178L, -4468501712824241321L}, {-3313311750294222404L, 8655992353490623011L, 7345831796034524290L, 8230564663438271962L, 4936185588435736779L, -6258533481228600731L, 5357916799091294704L, -2410628628353328229L}, {3506483921593914777L, 5926016956182906971L, -4802858453925195704L, -8588249625366025552L, -5919602390688812810L, 7707987931630403400L, -8917677865734651094L, -5148415287857131595L}, {-4397664434385941275L, -4290048587038347609L, -232636703348379278L, 4079972274396221955L, -4601022645059352952L, 8083228052836468715L, 6559364253926109679L, 4989508753839154457L}, {-4401062433580938780L, -6982124211901523534L, 7981067086294712201L, 1425680562827792332L, 3224572376806748318L, -7742302805386640611L, -6944994025452105182L, -2600839047897053000L}, {4145746669556686647L, 6670363775492953729L, 2208194759208801477L, 2850480500255204120L, 778674348474756870L, 5846885066723570752L, 5356226318159586542L, 3540187957467527377L}, {4853958746953917065L, -7474705895989835739L, 5124161845259315328L, -3680909584115611425L, -3360721164189265626L, 3494073208136190824L, 4643929291699630278L, 5648908857348770089L}}, {{1979060562847747189L, -5226857913246730321L, 2325254590249018452L, -4010982397983922603L, -2159321894275174502L, 8101685481361864087L, -8256453141017099542L, -7927143814141644280L}, {-5032723439309195162L, 2212566936129713266L, -1425658143470600525L, 3813832107951111803L, -4038322599183406598L, -8651637069957742555L, 1449828463987547308L, 2035791408116574156L}, {-8812956477967052276L, -852786456376773950L, -1799376917556037735L, -3144300875261872636L, -3368893658146670103L, -8276079372667895301L, 2092898638991098764L, 1551863421311926032L}, {-3724521673612422531L, -5787487188761843761L, -7483705414406792309L, -3540896300648993564L, -1657169515589501556L, -2260497233464075794L, -2958265544989668176L, -8174473948345501175L}, {617550375822102680L, 7155840233170201005L, -7373810896617312693L, -5704224820171299705L, -3814725722632255623L, -2466471664913964598L, -5063169242120237275L, -132856077324973875L}, {-1399207273685082267L, -9035678062088507506L, -5792746048679625828L, -1840583501831745071L, 8778010168939646331L, -3102802366264518405L, 7697637511796133647L, 6109524118837141297L}, {6815953250549922350L, -7370008565033067294L, -4883017179946175278L, 3461619494240619055L, 2437250217637898050L, 6916442157878903432L, -5431555568610402335L, 4633131781791466001L}, {6751373884168603594L, 912510006369526473L, 3262686909272260649L, -292239397266728787L, 7493646529227627370L, -363555613114910367L, -3061840669813634295L, 2850482159205132638L}}};
   static long[] castling = new long[]{7516911108551624177L, 8376856093521862486L};
   static Random r = new Random();

   public static String rand() {
      String out = "0x";
      char[] c = new char[16];

      for(int k = 0; k < 16; ++k) {
         int a = r.nextInt(16);
         c[k] = (char)(a < 10 ? 48 + a : 65 + (a - 10));
      }

      return out + new String(c) + "l";
   }

   public static String randColumn() {
      String out = "{";

      for(int k = 0; k < 8; ++k) {
         out = out + rand();
         if (k < 7) {
            out = out + ",";
         } else {
            out = out + "}";
         }
      }

      return out;
   }

   public static String randGroup() {
      String out = "{";

      for(int k = 0; k < 8; ++k) {
         out = out + randColumn();
         if (k < 7) {
            out = out + ",\n";
         } else {
            out = out + "}\n";
         }
      }

      return out;
   }

   public static void main(String[] args) {
      for(int k = 0; k < 7; ++k) {
         System.out.println(randGroup());
      }

   }
}
